name: Build and Push Docker Image CI

on:
  push:
    branches: 
      - main     # Declenche le workflow uniquement lorsque l'on push sur la branche "main"
  pull_request:  # Execute egalement le workflow sur une pull request pour tester sans push image

permissions:
  contents: read   # Donne uniquement la permission de lire le contenu du repo
  packages: write  # Permet ecrire dans Docker Hub
  id-token: write  # Necessaire si on veut utiliser OIDC pour l'authentification a l'avenir

jobs:
  build-image:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Clone le repo GitHub pour recuperer les fichiers necessaires au build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true  # Installe et active Docker Buildx pour des builds avances et multi-architectures

      - name: Log in to Docker Hub securely
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}  
          password: ${{ secrets.DOCKERHUB_TOKEN }}  

      - name: Extract Docker metadata
        id: meta-formini  
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/angular-tour-of-heroes  
          flavor: |
            latest=false  
          tags: |
            type=raw,value={{date 'YYYYMMDD-HHmmss'}}-{{sha}}            
          labels: |
            maintainer=bkalem@ios.dz
            org.opencontainers.image.title=Angular Tour of Heroes by Formini
            org.opencontainers.image.description=Application Angular lors de la formation DevOps by Formini
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .  # Utilise le repertoire racine du repo comme contexte de build
          push: true
          tags: ${{ steps.meta-formini.outputs.tags }}  
          labels: ${{ steps.meta-formini.outputs.labels }}  
          cache-from: type=gha         #  Utilise le cache GitHub Actions pour accelerer les builds
          cache-to: type=gha,mode=max  #  Stocke un maximum de cache et reduire le temps execution
          platforms: linux/amd64       # Build image pour plusieurs architectures
