# Stage 1: Build Angular App
FROM node:22-alpine AS build

WORKDIR /app

# Copy package files separately to leverage Docker caching
COPY package.json package-lock.json ./

# Install dependencies
RUN npm install --frozen-lockfile

# Copy source files and build the Angular project
COPY . .
RUN npm run build --prod

# Stage 2: Serve with Nginx
FROM nginx:alpine AS final

# Copy built app from the first stage
COPY --from=build /app/dist /usr/share/nginx/html

# Remove default nginx config and replace it with our own
RUN rm /etc/nginx/conf.d/default.conf

# Add custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 for serving
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]

